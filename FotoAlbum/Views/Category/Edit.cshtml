@using Microsoft.AspNetCore.Mvc.ModelBinding
@model FotoAlbum.Models.Category

@{
    ViewData["Title"] = "Edit";
}

<div class="px-2 content">
	<div class="glass-dark d-flex align-items-center justify-content-between options-menu w-100 mb-2">
		<div class="d-flex align-items-center h-100">
			<a href="@Url.Action("Index", "Category")"><i class="fas fa-angle-left nav-button h-100 me-2"></i></a>
			Edit @Model.Name
		</div>

		<div>
			<button class="border-0 bg-transparent" onclick="document.getElementById('edit-form').submit()"><i class="fas fa-check nav-button"></i></button>
		</div>
	</div>

	<div class="index-img-container glass-light align-items-start row pb-3">

		<div class="p-3 mb-3">
			@if (ViewData.ModelState.ErrorCount > 0)
			{
				<div class="alert alert-danger m-0 my-3">
					<ul class="m-0">
						@foreach (var error in ViewData.ModelState.Values.SelectMany(x => x.Errors))
						{
							<li>@error.ErrorMessage</li>
						}
					</ul>
				</div>
			}
			<form asp-action="Edit" id="edit-form">
				<div asp-validation-summary="ModelOnly" class="text-danger"></div>
				<div class="form-floating">
					<input asp-for="Name" placeholder="Name" class="form-control @(ViewData.ModelState.IsValid ? "" : (ViewData.ModelState["Name"]?.ValidationState == ModelValidationState.Valid ? "is-valid" : "is-invalid"))" />
					<label asp-for="Name" class="control-label"></label>
					<span asp-validation-for="Name" class="text-danger"></span>
				</div>
			</form>
		</div>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}

